akd_command_list = {
    "ain.cutoff": ( "NV", "Sets the analog input low-pass filter cutoff frequency."),
    "ain.deadband": ( "NV", "Sets the analog input signal deadband."),
    "ain.deadbandmode": ( "NV", "Sets the analog input deadband mode."),
    "ain.iscale": ( "NV", "Sets the analog current scale factor."),
    "ain.mode": ( "NV", "Analog input mode"),
    "ain.offset": ( "NV", "Sets the analog input offset."),
    "ain.ovfthresh": ( "NV", "Over voltage threshold for user defined fault on analog input."),
    "ain.ovwthresh": ( "NV", "Over voltage threshold for user defined warning on analog input."),
    "ain.pscale": ( "NV", "Sets the analog position scale factor."),
    "ain.uvfthresh": ( "NV", "Under voltage threshold for user defined fault on analog input."),
    "ain.uvwthresh": ( "NV", "Under voltage threshold for user defined warning on analog input."),
    "ain.value": ( "R/O", "Reads the value of the analog input signal."),
    "ain.vscale": ( "NV", "Sets analog velocity scale factor."),
    "ain2.cutoff": ( "NV", "Sets the analog input 2 low-pass filter cutoff frequency."),
    "ain2.deadband": ( "NV", "Sets the analog input 2 signal deadband."),
    "ain2.deadbandmode": ( "NV", "Sets the analog input 2 deadband mode."),
    "ain2.mode": ( "NV", "Analog input 2 mode"),
    "ain2.offset": ( "NV", "Sets the analog input 2 offset."),
    "ain2.value": ( "R/O", "Reads the value of the analog input 2 signal."),
    "ain2.zero": ( "Command", "Zeroes the analog input 2 signal."),
    "aout.cutoff": ( "NV", "Sets the analog output low-pass filter cutoff frequency."),
    "aout.iscale": ( "NV", "Sets the analog current scale factor."),
    "aout.mode": ( "NV", "Sets the analog output mode."),
    "aout.offset": ( "NV", "Sets the analog output offset."),
    "aout.pscale": ( "NV", "Sets the analog position scale factor."),
    "aout.value": ( "NV", "Reads the analog output value."),
    "aout.valueu": ( "R/W", "Sets the analog output value."),
    "aout.vscale": ( "NV", "Sets the velocity scale factor for analog output."),
    "aout2.cutoff": ( "NV", "Sets the analog output 2 low-pass filter cutoff frequency."),
    "aout2.mode": ( "NV", "Sets the analog output 2 mode."),
    "aout2.offset": ( "NV", "Sets the analog output 2 offset."),
    "aout2.value": ( "NV", "Reads the analog output 2 value."),
    "aout2.valueu": ( "R/W", "Sets the analog output 2 value."),
    "bode.excitegap": ( "R/W", "Controls how often the excitation is updated."),
    "bode.freq": ( "R/W", "Sets the frequency of the sine excitation source."),
    "bode.iamp": ( "R/W", "Sets current command value used during the Bode procedure."),
    "bode.iflimit": ( "R/W", "Sets the current fault duration limit in seconds for the BODE.MODE 5 stability test."),
    "bode.ifthresh": ( "R/W", "Sets the current fault threshold for the BODE.MODE 5 stability test."),
    "bode.injectpoint": ( "R/W", "Sets whether the excitation uses current or velocity excitation type."),
    "bode.mode": ( "R/W", "Sets the mode of the excitation."),
    "bode.modetimer": ( "R/W", "Sets the watchdog timer of the excitation."),
    "bode.prbdepth": ( "R/W", "Sets the length of the PRB signal before it repeats."),
    "bode.vamp": ( "R/W", "Sets the amplitude of the excitation when in velocity mode."),
    "bode.vflimit": ( "R/W", "Sets the velocity fault duration limit (seconds) for the BODE.MODE 5 stability test"),
    "bode.vfthresh": ( "R/W", "Sets the current fault threshold for the BODE.MODE 5 stability test."),
    "cap0.edge": ( "NV", "Selects the capture edge."),
    "cap1.edge": ( "NV", "Selects the capture edge."),
    "cap0.en": ( "NV", "Enables or disables the related capture engine."),
    "cap1.en": ( "NV", "Enables or disables the related capture engine."),
    "cap0.event": ( "NV", "Controls the precondition logic."),
    "cap1.event": ( "NV", "Controls the precondition logic."),
    "cap0.fbsource": ( "NV", "Selects the source of the captured value."),
    "cap1.fbsource": ( "NV", "Selects the source of the captured value."),
    "cap0.fbsource": ( "R/W", "Controls the precondition logic."),
    "cap1.fbsource": ( "R/W", "Controls the precondition logic."),
    "cap0.mode": ( "NV", "Selects the captured value."),
    "cap1.mode": ( "NV", "Selects the captured value."),
    "cap0.plfb": ( "R/O", "Reads captured position value."),
    "cap1.plfb": ( "R/O", "Reads captured position value."),
    "cap0.preedge": ( "NV", "Selects the capture precondition edge."),
    "cap1.preedge": ( "NV", "Selects the capture precondition edge."),
    "cap0.prefilter": ( "NV", "Sets the filter for the precondition input source."),
    "cap1.prefilter": ( "NV", "Sets the filter for the precondition input source."),
    "cap0.preselect": ( "NV", "Sets the precondition trigger."),
    "cap1.preselect": ( "NV", "Sets the precondition trigger."),
    "cap0.state": ( "R/O", "Indicates whether or not trigger source was captured."),
    "cap1.state": ( "R/O", "Indicates whether or not trigger source was captured."),
    "cap0.t": ( "R/O", "Reads time capture (if time capture was configured)."),
    "cap1.t": ( "R/O", "Reads time capture (if time capture was configured)."),
    "cap0.trigger": ( "NV", "Specifies the trigger source for the position capture."),
    "cap1.trigger": ( "NV", "Specifies the trigger source for the position capture."),
    "cogcomp.correctiontable": ( "R/W", "Table of cogging compensation values."),
    "cogcomp.correctionvalue": ( "R/O", "Cogging compensation value that is currently applied by the drive."),
    "cogcomp.en": ( "NV", "Activates or deactivates the cogging compensation table."),
    "cogcomp.load": ( "Command", "Restores the cogging compensation table from non-volatile memory."),
    "cogcomp.rangehigh": ( "NV", "Stores the position of the upper end of the range where cogging compensation is active on a linear axis."),
    "cogcomp.rangelow": ( "NV", "Stores the position of the lower end of the range where cogging compensation is active on a linear axis."),
    "cogcomp.save": ( "Command", "Writes the cogging compensation table to non-volatile memory."),
    "cogcomp.teach": ( "Command", "Starts automatic teaching of the cogging compensation table."),
    "cogcomp.v": ( "NV", "Velocity for the move during automatic teaching of the cogging compensation table."),
    "cps.active": ( "R/O", "Returns the enable status of the AKD-C."),
    "cs.dec": ( "NV", "Sets the deceleration value for the controlled stop process."),
    "cs.state": ( "NV", "Returns the internal status of the controlled stop process."),
    "cs.to": ( "NV", "Sets the time value for the drive velocity to be within CS.VTHRESH ."),
    "cs.vthresh": ( "NV", "Sets the velocity threshold for the controlled stop."),
    "din.rotary": ( "R/O", "Reads the rotary knob value."),
    "din.states": ( "R/O", "Reads the digital input states."),
    "din1.filter": ( "R/W", "Filter mode for digital inputs."),
    "din1.mode": ( "NV", "Sets the digital input modes."),
    "din1.param": ( "R/W", "Sets a value used as an extra parameter for digital inputs nodes."),
    "din1.state": ( "R/O", "Reads a specific digital input state."),
    "dout.ctrl": ( "NV", "Sets the source of digital output(s) (firmware or fieldbus)."),
    "dout.relaymode": ( "R/W", "Indicates faults relay mode."),
    "dout.states": ( "R/O", "Reads the state of the digital output(s)."),
    "dout1.mode": ( "NV", "Sets the digital output mode."),
    "dout2.mode": ( "NV", "Sets the digital output mode."),
    "dout1.param": ( "NV", "Sets extra parameters for the digital output(s)."),
    "dout2.param": ( "NV", "Sets extra parameters for the digital output(s)."),
    "dout1.state": ( "R/O", "Reads the digital output state."),
    "dout2.state": ( "R/O", "Reads the digital output state."),
    "dout1.stateu": ( "R/W", "Sets the state of the digital output node."),
    "dout2.stateu": ( "R/W", "Sets the state of the digital output node."),
    "drv.acc": ( "NV", "Describes the acceleration ramp for the velocity loop."),
    "drv.active": ( "R/O", "Reads the enable status of an axis."),
    "drv.blinkdisplay": ( "Command", "Causes the display to blink for 10 seconds."),
    "drv.boottime": ( "R/O", "Returns the time when the current session booted up."),
    "drv.clrfaulthist": ( "Command", "Clears the fault history log in the NV."),
    "drv.clrfaults": ( "Command", "Tries to clear all active faults in the drive."),
    "drv.cmddelay": ( "R/W", "Issues a delay before next command is executed."),
    "drv.cmdsource": ( "NV", "Sets the command source (service, fieldbus, analog input, gearing, digital, or Bode)."),
    "drv.crashdump": ( "Command", "Retrieves diagnostic information after the drive crashes."),
    "drv.dbilimit": ( "NV", "Sets the maximum amplitude of the current for dynamic braking."),
    "drv.dec": ( "NV", "Sets the deceleration value for the velocity loop."),
    "drv.difvar": ( "R/O", "Lists all parameters which differ from their default value."),
    "drv.dir": ( "R/W", "Changes drive direction."),
    "drv.dis": ( "Command", "Disables the axis (software)."),
    "drv.dismode": ( "NV", "Selects among disable immediately or stop and then disable options."),
    "drv.dissources": ( "R/O", "Returns the possible reason for a drive disable."),
    "drv.dissourcesmask": ( "R/O", "Returns a bitmap of all bits in DRV.DISSOURCES that can be set to one on a given drive."),
    "drv.disto": ( "R/W", "Sets the emergency timeout"),
    "drv.downloadallowed": ( "R/O", "Returns whether the drive is in a safe state to begin a firmware download."),
    "drv.emuedir": ( "R/W", "Sets the direction of the emulated encoder output (EEO) signal."),
    "drv.emuemode": ( "R/W", "Sets the mode of the emulated encoder output (EEO) connector."),
    "drv.emuemturn": ( "R/W", "Defines the location of the index pulse on the EEO (emulated encoder output) when DRV.EMUEMODE=2."),
    "drv.emueres": ( "R/W", "Sets the resolution of the EEO (emulated encoder output)."),
    "drv.emuestepcmd": ( "R/W", "Setpoint for stepper motor output through the emulated encoder output."),
    "drv.emuestepcmdpin": ( "R/W", "Scaling factor (numerator) for the command DRV.EMUESTEPCMD."),
    "drv.emuestepcmdpout": ( "R/W", "Scaling factor (denominator) for the command DRV.EMUESTEPCMD."),
    "drv.emuezoffset": ( "R/W", "Sets the location of the EEO (emulated encoder output) index pulse (when DRV.EMUEMODE=1)."),
    "drv.en": ( "Command", "Enables the axis (software)."),
    "drv.endefault": ( "R/W", "Sets the default state of the software enable."),
    "drv.errorlist": ( "R/O", "Prints a list of all possible error codes and error text."),
    "drv.faultdisplaymode": ( "NV", "Sets the fault display mode."),
    "drv.faulthist": ( "R/O", "Reads the last 50 faults from NV memory."),
    "drv.faults": ( "R/O", "Reads the active faults."),
    "drv.fault1": ( "R/O", "Location of fault codes for any active fault conditions."),
    "drv.handwheel": ( "R/O", "Reads the EEO input value."),
    "drv.handwheelsrc": ( "NV", "Selects the feedback for handwheel operation."),
    "drv.help": ( "R/O", "Reads the minimum, maximum, and default values for a specific parameter or command."),
    "drv.helpall": ( "R/O", "Retrieves the minimum, maximum, default, and actual values for all available parameters and commands."),
    "drv.hwenable": ( "R/O", "Status of the hardware enable."),
    "drv.hwendelay": ( "NV", "Delay time between inactive Hardware Enable input and drive disable."),
    "drv.hwenmode": ( "R/W", "Selects the action that the hardware enable digital input will perform."),
    "drv.icont": ( "R/O", "Reads the continuous rated current value."),
    "drv.info": ( "R/O", "Reads general information about the drive."),
    "drv.ipeak": ( "R/O", "Reads the peak rated current value."),
    "drv.izero": ( "R/W", "Sets the current that will be used during the DRV.ZERO procedure."),
    "drv.list": ( "R/O", "Reads the list of available parameters and commands."),
    "drv.logicvolts": ( "R/O", "Reads the logic voltages."),
    "drv.motiondissources": ( "R/O", "Returns some causes of a motion disable."),
    "drv.name": ( "NV", "Sets and reads the name of the drive."),
    "drv.nvcheck": ( "R/O", "NV Parameter Checksum"),
    "drv.nvlist": ( "R/O", "Lists the NV parameters and values from the RAM."),
    "drv.nvload": ( "W/O", "Loads all data from the NV memory of the drive into the RAM parameters."),
    "drv.nvsave": ( "Command", "Saves the drive parameters from the RAM to the NV memory."),
    "drv.ontime": ( "R/O", "Returns how long the drive has been running since last power up."),
    "drv.opmode": ( "NV", "Sets the drive operation mode (current, velocity, or position)."),
    "drv.powerboardid": ( "R/O", "Returns unique identifier for the power board."),
    "drv.readformat": ( "R/W", "Sets the value returned to either decimal or hexadecimal."),
    "drv.reboot": ( "Command", "Performs a software reboot."),
    "drv.rstvar": ( "Command", "Sets default values in the drive without re-booting the drive and without resetting the NV memory."),
    "drv.runtime": ( "R/O", "Returns how long the drive has been running since first activated."),
    "drv.setupreqbits": ( "R/O", "Reads the bitwise set status of parameters that must be set before the drive can be enabled."),
    "drv.setupreqlist": ( "R/O", "Reads the list of parameters that must be set before the drive can be enabled."),
    "drv.stop": ( "Command", "This command stops all drive motion."),
    "drv.temperatures": ( "R/O", "Reads the temperature of drive components."),
    "drv.time": ( "R/W", "A continuous time counter in the drive."),
    "drv.type": ( "R/O", "Selects the operational fieldbus on CC drive models."),
    "drv.ver": ( "R/O", "Reads the drive version."),
    "drv.verimage": ( "R/O", "Returns the version data from each image."),
    "drv.warnings": ( "R/O", "Reads the active warnings."),
    "drv.warning1": ( "R/O", "Location of fault codes for any active warning conditions."),
    "drv.zero": ( "R/W", "Sets the zero mode. The procedure is activated when the drive is enabled."),
    "ds402.1addposfcfeed": ( "R/W", "First additional feed constant - feed."),
    "ds402.1addposfcshaftrev": ( "R/W", "First additional feed constant - driving shaft revolutions."),
    "ds402.1addposgearmotorrev": ( "R/W", "First additional gear ratio – motor shaft revolutions."),
    "ds402.1addposgearshaftrev": ( "R/W", "First additional gear ratio – driving shaft revolutions"),
    "ds402.2addposfcfeed": ( "R/W", "Second additional feed constant - feed."),
    "ds402.2addposfcshaftrev": ( "R/W", "Second additional feed constant - driving shaft revolutions."),
    "ds402.2addposgearmotorrev": ( "R/W", "Second additional gear ratio – motor shaft revolutions."),
    "ds402.2addposgearshaftrev": ( "R/W", "Second additional gear ratio – driving shaft revolutions"),
    "ds402.3addposfcfeed": ( "R/W", "Third additional feed constant - feed."),
    "ds402.3addposfcshaftrev": ( "R/W", "Third additional feed constant - driving shaft revolutions."),
    "ds402.3addposgearmotorrev": ( "R/W", "Third additional gear ratio – motor shaft revolutions."),
    "ds402.3addposgearshaftrev": ( "R/W", "Third additional gear ratio – driving shaft revolutions"),
    "ds402.controlword": ( "R/O", "Returns the actual value of the DS402 control word, sent by the fieldbus master to the drive."),
    "ds402.statusword": ( "R/O", "Returns the actual value of the DS402 status word sent by the drive to the fieldbus master."),
    "ecat.legacyrev": ( "NV", "Defines the revision number located in the EtherCAT slave EEprom information."),
    "eip.acc": ( "NV", "Acceleration ramp for the velocity loop used by the next motion commanded over EtherNet/IP."),
    "eip.cmdmap": ( "R/W", "Sets parameters in the dynamic portion of command assembly."),
    "eip.connected": ( "R/O", "Returns state of EtherNet/IP connection."),
    "eip.dec": ( "NV", "Deceleration ramp for the velocity loop used by the next motion commanded over EtherNet/IP."),
    "eip.objectlist": ( "R/O", "Provides information about objects that are available for dynamic mapping over the EtherNet/IP fieldbus."),
    "eip.posunit": ( "R/W", "Unit scaling for Position values over EtherNet/IP."),
    "eip.profunit": ( "R/W", "Unit scaling for Velocity and Acceleration values over EtherNet/IP."),
    "eip.rspmap": ( "R/W", "Sets parameters in the dynamic portion of response assembly."),
    "fb1.bissbits": ( "NV", "Specifies the number of Biss Sensor (Position) Bits for the BiSS Mode C encoder in use."),
    "fb1.calthresh": ( "NV", "Sets the velocity threshold at which the auto-calibration function will continuously update error correction for sin/cos encoders."),
    "fb1.diag": ( "R/O", "Returns feedback diagnostic information."),
    "fb1.encres": ( "NV", "Sets the resolution of the motor encoder."),
    "fb1.encressource": ( "R/W", "Selects a source for Endat feedback encoder resolution."),
    "fb1.encsign": ( "NV", "Sets the sign interpretation of the absolute encoder values."),
    "fb1.faults": ( "R/O", "Returns a string describing the root cause of Fault 467."),
    "fb1.hallstate": ( "R/O", "Reads the Hall switch values (encoder feedback only)."),
    "fb1.hallstateu": ( "R/O", "Reads the state of Hall switch U."),
    "fb1.hallstatev": ( "R/O", "Reads the state of Hall switch V."),
    "fb1.hallstatew": ( "R/O", "Reads the state of Hall switch W."),
    "fb1.identified": ( "R/O", "Reads the type of feedback device used by the drive/motor."),
    "fb1.initpsaved": ( "R/O", "Reads position saved at last power down."),
    "fb1.initpstatus": ( "R/O", "Reads result of initial position comparison."),
    "fb1.initpwindow": ( "R/W", "Reads and writes size of the initial position comparison window."),
    "fb1.initsigned": ( "NV", "Sets initial feedback value as signed or unsigned."),
    "fb1.lastidentified": ( "NV", "Stores the feedback type auto-detected during the last feedback initialization. Auto-detection will look for this type first."),
    "fb1.mechpos": ( "R/O", "Reads the mechanical position."),
    "fb1.memver": ( "R/O", "Returns the memory feedback version."),
    "fb1.motorphase": ( "NV", "Sets the motor phase of the motor associated with FB1."),
    "fb1.motorpoles": ( "NV", "Sets the number of motor poles associated with FB1."),
    "fb1.offset": ( "NV", "Sets position feedback offset."),
    "fb1.origin": ( "NV", "Adds to the initial feedback position."),
    "fb1.p": ( "R/O", "Reads position from the primary feedback."),
    "fb1.pdir": ( "NV", "Sets the counting direction for feedback channel 1."),
    "fb1.pfind": ( "R/W", "A procedure that allows the user to find the commutation angle for encoder feedback, which has no halls."),
    "fb1.pfindcmdu": ( "R/W", "Current value used during the phase finding procedure (PFB.PFIND=1)"),
    "fb1.pin": ( "NV", "Sets gear IN for FB1.P ."),
    "fb1.poffset": ( "NV", "Sets the offset for primary feedback."),
    "fb1.poles": ( "R/O", "Sets the number of feedback poles."),
    "fb1.pout": ( "NV", "Sets gear IN for FB1.P ."),
    "fb1.pscale": ( "R/W", "Sets position scaling value for fieldbus transferred position objects."),
    "fb1.punit": ( "NV", "Sets the unit for FB1.P."),
    "fb1.resktr": ( "NV", "Sets the resolver nominal transformation ratio."),
    "fb1.resrefphase": ( "NV", "Sets the electrical degrees of phase lag in the resolver."),
    "fb1.select": ( "NV", "Sets user entered type or identified type (–1)."),
    "fb1.trackingcal": ( "NV", "Controls tracking calibration algorithm."),
    "fb1.userbyte0": ( "R/W", "Reads and writes data stored in eight 8 bit bytes in an Endat or Hiperface feedback device."),
    "fb1.userdword0": ( "R/W", "Reads and writes data stored in two 32 bit words in an Endat or Hiperface feedback device."),
    "fb1.userword0": ( "R/W", "Reads and writes data stored in four 16 bit words in an Endat or Hiperface feedback device."),
    "fb2.dir": ( "R/W", "Sets the counting direction for feedback channel 2."),
    "fb2.encres": ( "NV", "Sets the secondary feedback (FB2) resolution (also defines resolution of virtual encoder in AKD BASIC)."),
    "fb2.mode": ( "R/W", "Sets the mode for the second feedback inputs, EEO connector (X9) and high speed opto inputs (pins 9 and 10 on X7)."),
    "fb2.motorphase": ( "NV", "Sets the motor phase of the motor associated with FB2."),
    "fb2.motorpoles": ( "NV", "Sets the number of motor poles associated with FB2."),
    "fb2.p": ( "R/O", "Reads position from the secondary feedback."),
    "fb2.pin": ( "NV", "Sets gear IN for FB2.P ."),
    "fb2.poffset": ( "NV", "Sets the offset for secondary feedback."),
    "fb2.pout": ( "NV", "Sets gear IN for FB2.P ."),
    "fb2.punit": ( "NV", "Sets the unit for FB2.P."),
    "fb2.source": ( "R/W", "Sets the source for the second feedback input. Choices are the EEO connectors (X9) which are RS485 inputs, or the X7 connector’s high speed opto inputs (pins 9 and 10)."),
    "fb3.dir": ( "NV", "Sets the counting direction for the position feedback when PL.FBSOURCE = 2."),
    "fb3.encres": ( "NV", "Sets the resolution of the motor encoder for feedback 3."),
    "fb3.mode": ( "NV", "Selects the type of feedback connected to X9."),
    "fb3.motorphase": ( "NV", "Sets the motor phase of the motor associated with FB3."),
    "fb3.motorpoles": ( "NV", "Sets the number of motor poles associated with FB3."),
    "fb3.p": ( "R/O", "Reads position from the tertiary feedback."),
    "fb3.pdir": ( "NV", "Sets the counting direction for feedback channel 3."),
    "fb3.pin": ( "NV", "Sets gear IN for FB3.P."),
    "fb3.poffset": ( "NV", "Sets the offset for tertiary feedback."),
    "fb3.pout": ( "NV", "Sets gear IN for FB3.P."),
    "fb3.punit": ( "NV", "Sets the unit for FB3.P."),
    "fbus.blocking": ( "R/O", "Returns the actual state of the protection level."),
    "fbus.interpolatemode": ( "R/W", "Describes the method that is used to interpolate between position set points within the fieldbus cycle."),
    "fbus.param1": ( "NV", "Set fieldbus specific meanings."),
    "fbus.pllstate": ( "R/O", "Returns the status of the PLL"),
    "fbus.pllthresh": ( "NV", "Sets number of successful synchronized cycles needed to lock the PLL."),
    "fbus.protection": ( "R/W", "Controls which parameters are blocked from being accessed through telnet while a fieldbus is operational."),
    "fbus.sampleperiod": ( "NV", "Sets fieldbus sample period."),
    "fbus.state": ( "R/O", "Reads the state of the fieldbus."),
    "fbus.syncacquirewnd": ( "NV", "Defines the time window that is used for the starting the synchronization."),
    "fbus.syncact": ( "R/O", "Reads actual distance from the desired sync distance."),
    "fbus.syncdist": ( "NV", "Sets time target for synchronization."),
    "fbus.synclockwnd": ( "NV", "Defines the time window that is used for keeping the synchronization running."),
    "fbus.syncwnd": ( "NV", "Sets symmetrically arranged window around the desired sync distance."),
    "fbus.type": ( "R/O", "Shows the active fieldbus type."),
    "gear.accmax": ( "R/W", "Sets the maximum allowed acceleration value; active in opmode 2 (position) only."),
    "gear.decmax": ( "R/W", "Sets the maximum allowed deceleration value; active in opmode 2 (position) only."),
    "gear.in": ( "R/W", "Sets the denominator of the electronic gearing ratio; active in opmode 2 (position) only."),
    "gear.mode": ( "R/W", "Selects electronic gearing mode; active in opmode 2 (position) only."),
    "gear.move": ( "Command", "Starts the electronic gearing; active in opmode 2 (position) only."),
    "gear.out": ( "R/W", "Sets the numerator of the electronic gearing ratio; active in opmode 2 (position) only."),
    "gear.syncwnd": ( "NV", "Sets the Electronic Gearing target velocity window"),
    "gear.vmax": ( "R/W", "Reads the maximum allowed velocity value; active in opmode 2 (position) only."),
    "gui.display": ( "R/O", "Reads drive display data."),
    "gui.displays": ( "R/O", "Reads drive display data."),
    "gui.param01": ( "NV", "Used by the GUI to store data."),
    "gui.param02": ( "NV", "Used by the GUI to store data."),
    "gui.param03": ( "NV", "Used by the GUI to store data."),
    "gui.param04": ( "NV", "Used by the GUI to store data."),
    "gui.param05": ( "NV", "Used by the GUI to store data."),
    "gui.param06": ( "NV", "Used by the GUI to store data."),
    "gui.param07": ( "NV", "Used by the GUI to store data."),
    "gui.param08": ( "NV", "Used by the GUI to store data."),
    "gui.param09": ( "NV", "Used by the GUI to store data."),
    "gui.param10": ( "NV", "Used by the GUI to store data."),
    "home.acc": ( "R/W", "Sets homing acceleration; active in opmode 2 (position) only."),
    "home.automove": ( "R/W", "Sets homing auto move flag."),
    "home.dec": ( "R/W", "Sets homing deceleration; active in opmode 2 (position) only."),
    "home.dir": ( "NV", "Sets homing direction; active in opmode 2 (position) only."),
    "home.dist": ( "R/W", "Sets homing distance; active in opmode 2 (position) only."),
    "home.feedrate": ( "R/W", "Sets homing velocity factor; active in opmode 2 (position) only."),
    "home.ipeak": ( "R/W", "Sets the current limit during homing procedure to a mechanical stop; active in opmode 2 (position) only."),
    "home.ipeakactive": ( "R/W", "Toggles between HOME.IPEAK and current loop limits during homing."),
    "home.maxdist": ( "R/W", "Sets the maximum distance the motor is allowed to move during the homing routine."),
    "home.mode": ( "R/W", "Selects the homing mode; active in opmode 2 (position) only."),
    "home.move": ( "Command", "Starts a homing procedure; active in opmode 2 (position) only."),
    "home.moverequired": ( "R/O", "Indicates if a homing move has to be executed."),
    "home.p": ( "R/W", "Sets home position; active in opmode 2 (position) only."),
    "home.perrthresh": ( "R/W", "Sets the position lag threshold; active in opmode 2 (position) only."),
    "home.set": ( "Command", "Immediately sets the home position; active in opmode 2 (position) only."),
    "home.tposwnd": ( "R/W", "Sets the target position window for the homing procedure; active in opmode 2 (position) only."),
    "home.v": ( "R/W", "Sets homing velocity; active in opmode 2 (position) only."),
    "hwls.negstate": ( "R/O", "Reads the status of the negative hardware limit switch."),
    "hwls.posstate": ( "R/O", "Reads the status of the positive hardware limit switch."),
    "il.busff": ( "R/O", "Displays the current feedforward value injected by the fieldbus."),
    "il.cmd": ( "R/O", "Reads the value of the q-component current command."),
    "il.cmdacc": ( "R/O", "Returns the commanded acceleration from the trajectory generator."),
    "il.cmdu": ( "R/W", "Sets the user current command."),
    "il.dcmd": ( "R/O", "Reads the value of the d-component current controller inside the FPGA."),
    "il.dfb": ( "R/O", "Reads the actual value of the d-component current."),
    "il.difold": ( "R/O", "Reads the drive foldback current limit."),
    "il.fb": ( "R/O", "Reads the actual value of the q-component current."),
    "il.fbsource": ( "R/W", "Sets the feedback source for the current loop. Only applies when MOTOR.TYPE = 4."),
    "il.ff": ( "R/O", "Reads the current loop overall feedforward value."),
    "il.foldfthresh": ( "NV", "Reads the foldback fault level."),
    "il.foldfthreshu": ( "NV", "Sets the user value for the foldback fault level."),
    "il.foldwthresh": ( "NV", "Sets the foldback warning level."),
    "il.ifold": ( "R/O", "Reads the overall foldback current limit."),
    "il.iufb": ( "R/O", "Reads the sigma-delta measured current in the u-winding of the motor."),
    "il.kaccff": ( "R/W", "Sets current loop acceleration feedforward gain value"),
    "il.kbusff": ( "R/W", "Current loops fieldbus injected feed-forward gain"),
    "il.kp": ( "NV", "Sets the proportional gain of the q-component of the PI regulator."),
    "il.kpdratio": ( "NV", "Sets the proportional gain of the d-component current PI-regulator as a percentage of IL.KP"),
    "il.kplookupindex": ( "R/W", "Sets the index into the Current Loop Gain Scheduling Table."),
    "il.kplookupvalue": ( "R/W", "Sets the value of the current loop gain scheduling index."),
    "il.kplookupvalues": ( "R/W", "Gets the Current Loop Gain Scheduling Table."),
    "il.kpsource": ( "NV", "Selects a source for the IL.KP value when MOTOR.AUTOSET is enabled"),
    "il.kvff": ( "R/W", "Current loop velocity feed-forward gain."),
    "il.limitn": ( "NV", "Sets the negative user (application-specific) current limit."),
    "il.limitp": ( "NV", "Sets the positive user (application-specific) current limit."),
    "il.mfoldd": ( "NV", "Sets the motor foldback maximum time at motor peak current."),
    "il.mfoldr": ( "R/O", "Sets the motor foldback recovery time."),
    "il.mfoldt": ( "NV", "Sets the motor foldback time constant of the exponential current drop (foldback)."),
    "il.mi2t": ( "R/O", "Motor I2t load."),
    "il.mi2twthresh": ( "NV", "Motor I2t load warning threshold."),
    "il.mifold": ( "R/O", "Sets the motor foldback current limit."),
    "il.mimode": ( "NV", "Motor protection mode."),
    "il.offset": ( "R/W", "A constant current command added to compensate for gravity."),
    "il.vcmd": ( "R/O", "Reads the output of the q-component PI regulator."),
    "il.vlimit": ( "NV", "Sets the velocity limit for opmode 0 (torque)."),
    "il.vufb": ( "R/O", "Reads the measured voltage on the u-winding of the motor."),
    "il.vvfb": ( "R/O", "Reads the measured voltage on the v-winding of the motor."),
    "ip.address": ( "NV", "Gets/Sets the IP address of the drive."),
    "ip.gateway": ( "NV", "Gets/Sets the gateway IP of the drive."),
    "ip.mode": ( "NV", "Sets method of acquiring IP Address."),
    "ip.reset": ( "Command", "Implements new IP settings.."),
    "ip.subnet": ( "NV", "Gets/Sets the IP subnet mask of the drive."),
    "load.inertia": ( "NV", "Sets the load inertia."),
    "modbus.clrdynmap": ( "Command", "Clear Modbus dynamic mapping table."),
    "modbus.clrerrors": ( "Command", "Clears all errors stored in MODBUS.ERRORS."),
    "modbus.dio": ( "R/O", "Returns digital input and output states."),
    "modbus.drv": ( "R/W", "Enables / disables the drive and issues DRV.STOP"),
    "modbus.drvstat": ( "R/O", "Collects and returns multiple drive status related parameters."),
    "modbus.dynmap": ( "R/W", "Enables/disables modbus dynamic mapping."),
    "modbus.errormode": ( "R/W", "Enable/disable Modbus error response messages."),
    "modbus.errors": ( "R/O", "Returns a list of up to 125 Modbus errors."),
    "modbus.home": ( "R/W", "Controls HOME.MOVE and HOME.SET"),
    "modbus.motor": ( "R/W", "Linked to MOTOR.BRAKE and MOTOR.BRAKERLS"),
    "modbus.msgdump": ( "Command", "Prints messages from the Modbus message log."),
    "modbus.msglog": ( "NV", "Enables logging of Modbus requests."),
    "modbus.mt": ( "R/W", "Controls motion tasking functions."),
    "modbus.pin": ( "R/W", "Gets / Sets the Modbus User Units Input parameter."),
    "modbus.pout": ( "R/W", "Gets / Sets the Modbus User Units Output parameter."),
    "modbus.pscale": ( "R/W", "Gets/Sets the Feedback Resolution (per rev) over Modbus."),
    "modbus.scaling": ( "NV", "Selects the scaling mode for Modbus values."),
    "modbus.sm": ( "R/W", "Controls SM.MODE and SM.MOVE"),
    "motor.autoset": ( "NV", "Determines which drive parameters are calculated automatically."),
    "motor.brake": ( "NV", "Sets the presence or absence of a motor brake. Can also be set to bypass F305."),
    "motor.brakeimm": ( "NV", "Brake Immediately: in the case of a drive disable, apply the brake as soon as the power stage disables."),
    "motor.brakerls": ( "Command", "Allows a user to release or apply the motor brake."),
    "motor.brakestate": ( "R/O", "Reads the actual status of the motor brake."),
    "motor.ctf0": ( "NV", "Sets the thermal constant of the motor coil."),
    "motor.fieldweakening": ( "R/W", "Allows a surface permanent magnet motor to operate as an interior permanent magnet motor."),
    "motor.icont": ( "NV", "Sets the motor continuous current."),
    "motor.iddatavalid": ( "R/O", "Reports the status of the motor memory."),
    "motor.idmax": ( "NV", "Maximum direct axis current."),
    "motor.imid": ( "R/W", "The direct-axis current set point used for induction machine closed-loop control."),
    "motor.imtr": ( "R/W", "Rotor time constant."),
    "motor.inertia": ( "NV", "Sets the motor inertia."),
    "motor.info": ( "R/O", "Returns production year and week of a Kollmorgen Motor."),
    "motor.ipeak": ( "NV", "Sets the motor peak current."),
    "motor.ke": ( "NV", "Sets the motor back EMF constant."),
    "motor.kt": ( "NV", "Sets the torque constant of the motor."),
    "motor.ldll": ( "NV", "Motor line to line direct axis inductance."),
    "motor.lisat": ( "NV", "Motor quadrature axis inductance saturation characteristic."),
    "motor.lqll": ( "NV", "Sets the line-to-line motor Lq."),
    "motor.name": ( "NV", "Sets the motor name."),
    "motor.phase": ( "NV", "Sets the motor phase."),
    "motor.phsadvk1": ( "NV", "First order phase advance polynomial coefficient."),
    "motor.phsadvk2": ( "NV", "Second order phase advance polynomial coefficient."),
    "motor.pitch": ( "NV", "Sets the motor pitch."),
    "motor.poles": ( "NV", "Sets the number of motor poles."),
    "motor.r": ( "NV", "Sets the stator winding resistance phase-phase in ohms."),
    "motor.rtype": ( "NV", "Defines the type of thermal resistor inside the motor."),
    "motor.supportedparams": ( "R/O", "Lists MOTOR parameters supported by configured motor type."),
    "motor.tbrakeapp": ( "NV", "The delay time used for applying the motor brake."),
    "motor.tbrakerls": ( "NV", "The delay time used for releasing the motor brake."),
    "motor.tbraketo": ( "NV", "Brake apply timeout for vertical axis."),
    "motor.temp": ( "R/O", "Reads the motor temperature represented as the resistance of the motor PTC or NTC."),
    "motor.tempc": ( "R/O", "Reads the motor temperature in degrees Celsius."),
    "motor.tempfault": ( "NV", "Sets the motor temperature fault level."),
    "motor.tempwarn": ( "NV", "Sets the motor temperature warning level."),
    "motor.type": ( "NV", "Sets the motor type."),
    "motor.vmax": ( "NV", "Sets the maximum motor speed."),
    "motor.voltmax": ( "NV", "Sets the motor maximum voltage."),
    "motor.voltmin": ( "NV", "Sets the minimum voltage for V/f control."),
    "motor.voltrated": ( "NV", "Sets the motor rated voltage."),
    "motor.vrated": ( "NV", "Sets the motor rated velocity (not maximum velocity)."),
    "mt.acc": ( "R/W", "Specifies motion task acceleration; active in opmode 2 (position) only."),
    "mt.clear": ( "Command", "Clears motion tasks from the drive; active in opmode 2 (position) only."),
    "mt.cntl": ( "R/W", "Sets motion task control word; active in opmode 2 (position) only."),
    "mt.continue": ( "Command", "Continues a stopped motion task; active in opmode 2 (position) only."),
    "mt.dec": ( "R/W", "Sets motion task deceleration; active in opmode 2 (position) only."),
    "mt.emergmt": ( "R/W", "Selects a motion task to be triggered after an emergency stop procedure; active in opmode 2 (position) only."),
    "mt.feedrate": ( "R/W", "Sets the motion tasking velocity scale. This can be set while a motion task is running (on the fly)."),
    "mt.list": ( "Command", "Lists all initialized motion tasks in the drive; active in opmode 2 (position) only."),
    "mt.load": ( "Command", "Reads/loads a motion task number from the drive; active in opmode 2 (position) only."),
    "mt.move": ( "Command", "Starts a motion task; active in opmode 2 (position) only."),
    "mt.mtnext": ( "R/W", "Specifies following motion task number; active in opmode 2 (position) only."),
    "mt.num": ( "R/W", "Sets the motion task number; active in opmode 2 (position) only."),
    "mt.p": ( "R/W", "Sets the motion task position; active in opmode 2 (position) only."),
    "mt.params": ( "Command", "Shows a motion task; active in opmode 2 (position) only."),
    "mt.set": ( "Command", "Sets the motion task in the drive; active in opmode 2 (position) only."),
    "mt.tnext": ( "R/W", "Specifies following motion task time; active in opmode 2 (position) only."),
    "mt.tnum": ( "R/W", "Sets the motion task customer table number; active in opmode 2 (position) only."),
    "mt.tnvsave": ( "Command", "Saves the motion profile tables to the nonvolatile memory."),
    "mt.tposwnd": ( "R/W", "Sets the motion task target position window; active in opmode 2 (position) only."),
    "mt.tvelwnd": ( "R/W", "Sets the motion task target velocity window; active in opmode 2 (position) only."),
    "mt.v": ( "R/W", "Sets the motion task velocity; active in opmode 2 (position) only."),
    "mt.vcmd": ( "R/O", "Reads the derivative of PL.CMD; active in opmode 2 (position) only."),
    "pl.cmd": ( "NV", "Reads the position command directly from the entry to the position loop."),
    "pl.err": ( "R/O", "Reads the position error present when the drive is controlling the position loop."),
    "pl.errfactor": ( "NV", "Scale factor for enhanced following error fault and warning detection."),
    "pl.errfthresh": ( "NV", "Sets the maximum position error."),
    "pl.errmode": ( "R/W", "Sets the type of following error warning and fault usage."),
    "pl.errtime": ( "NV", "Fault and warning time for enhanced following error detection."),
    "pl.errwthresh": ( "NV", "Sets the position error warning level."),
    "pl.fb": ( "R/O", "Reads the position feedback value."),
    "pl.fbsource": ( "NV", "Sets the feedback source for the position loop."),
    "pl.filtertime": ( "R/W", "Sets the position command filter period."),
    "pl.gearin": ( "NV", "Sets the gear factor (numerator) for position output values (velocity commands) to the velocity loop."),
    "pl.gearout": ( "NV", "Sets the gear factor (denominator) for position output values (velocity commands) to the velocity loop."),
    "pl.intinmax": ( "NV", "Limits the input of the position loop integrator by setting the input saturation."),
    "pl.intoutmax": ( "NV", "Limits the output of the position loop integrator by setting the output saturation."),
    "pl.ki": ( "NV", "Sets the integral gain of the position loop."),
    "pl.kithresh": ( "R/W", "Sets the velocity command threshold at which the position loop integrator turns off."),
    "pl.kp": ( "NV", "Sets the proportional gain of the position regulator PID loop."),
    "pl.modp1": ( "R/W", "Sets modulo range parameter."),
    "pl.modp2": ( "R/W", "Sets the beginning or end modulo range parameter."),
    "pl.modpdir": ( "R/W", "Sets the direction for absolute motion tasks."),
    "pl.modpen": ( "R/W", "Enables the modulo position."),
    "pl.pdelay": ( "R/W", "Sets the delay time for PL.CMD."),
    "pls.en": ( "R/W", "Enables programmable limit switch (PLS)."),
    "pls.mode": ( "NV", "Selects programmable limit switch mode."),
    "pls.p1": ( "NV", "Sets the trigger point for programmable limit switches."),
    "pls.reset": ( "W/O", "Resets programmable limit switch."),
    "pls.state": ( "R/O", "Reads the programmable limit switch state."),
    "pls.t1": ( "R/W", "Sets programmable limit switch time."),
    "pls.units": ( "R/W", "Sets programmable limit switch (PLS) units."),
    "pls.width1": ( "R/W", "Programmable Limit Switch Width"),
    "pn.accscaling": ( "NV", "Sets the scaling for Profinet acceleration signals."),
    "pn.posscale": ( "NV", "Sets scaling for PNUs in Profinet which have an index greater than 2000, have the data type float, and are dependent on the position scaling parameters UNIT.PLINEAR or UNIT.PROTARY."),
    "pn.stw1": ( "R/O", "Returns the actual value of the PROFIdrive control word requested by the PROFINET master."),
    "pn.timeoutfthresh": ( "R/O", "Reads the Timeout Fault Threshold for the Profinet Communication Lost Fault (F702)"),
    "pn.velscaling": ( "NV", "Sets scaling for Profinet velocity signals."),
    "pn.zsw1": ( "R/O", "Returns the actual value of the PROFIdrive status word send by the drive to the PROFINET master."),
    "rec.active": ( "R/O", "Indicates if data recording is in progress (active)."),
    "rec.ch1": ( "R/W", "Sets recording channels 1 to 6."),
    "rec.done": ( "R/O", "Checks whether or not the recorder has finished recording."),
    "rec.gap": ( "R/W", "Specifies the gap between consecutive samples."),
    "rec.numpoints": ( "R/W", "Sets the number of points to record."),
    "rec.off": ( "R/W", "Turns the recorder OFF."),
    "rec.recprmlist": ( "R/O", "Reads the list of recordable parameters."),
    "rec.retrieve": ( "R/O", "Transfers all the recorded data to the communication channel."),
    "rec.retrievedata": ( "R/W", "Retrieves the recorded data without the header."),
    "rec.retrievefrmt": ( "R/W", "Sets the format for recorded data output."),
    "rec.retrievehdr": ( "R/O", "Retrieves the recorded header without the data."),
    "rec.retrievesize": ( "R/W", "Sets the number of samples that REC.RETRIEVEDATA returns."),
    "rec.stoptype": ( "R/W", "Sets the recorder stop type."),
    "rec.trig": ( "Command", "Triggers the recorder."),
    "rec.trigparam": ( "R/W", "Sets the parameter that triggers the recorder."),
    "rec.trigpos": ( "R/W", "Sets the trigger position in the recording buffer."),
    "rec.trigprmlist": ( "R/O", "Reads the list of possible trigger parameters."),
    "rec.trigslope": ( "R/W", "Sets the trigger slope."),
    "rec.trigtype": ( "R/W", "Sets the trigger type."),
    "rec.trigval": ( "R/W", "Sets the trigger value."),
    "regen.power": ( "R/O", "Reads regen resistor's calculated power."),
    "regen.powerfiltered": ( "R/O", "Returns a filtered version of REGEN.POWER ."),
    "regen.rext": ( "N/V", "Sets the external, user-defined regen resistor resistance."),
    "regen.text": ( "R/W", "Sets the external regen resistor thermal protection time constant."),
    "regen.type": ( "NV", "Sets the regen resistor type."),
    "regen.wattext": ( "R/W", "Sets the regen resistor's power fault level for an external regen resistor."),
    "s3.address": ( "NV", "Sets and reads the sercos® slave address."),
    "sd.load": ( "Command", "Loads the drive state (BASIC program and NV parameters)from the SD card to the AKD (AKDs equipped with IO option card only)."),
    "sd.save": ( "Command", "Saves the drive state (BASIC program and NV parameters) to the SD card (AKDs equipped with IO option card only)."),
    "sd.status": ( "R/O", "Reads the status of the SD card."),
    "sm.acc": ( "NV", "Sets the acceleration ramp for service motion if set to greater than 0."),
    "sm.dec": ( "NV", "Sets the deceleration ramp for service motion if set to greater than 0."),
    "sm.i1": ( "R/W", "Sets service motion current 1; active in opmode 0 (torque) only."),
    "sm.i2": ( "R/W", "Sets service motion current 2; active in opmode 0 (torque) only."),
    "sm.mode": ( "R/W", "Sets the service motion mode."),
    "sm.move": ( "Command", "Starts the service motion."),
    "sm.t1": ( "R/W", "Sets the service motion time 1."),
    "sm.t2": ( "R/W", "Sets the service motion time 2."),
    "sm.v1": ( "R/W", "Sets service motion velocity 1; active in opmode 1 (velocity) and 2 (position)."),
    "sm.v2": ( "R/W", "Sets service motion velocity 2; active in opmode 1 (velocity) and 2 (position)."),
    "sto.state": ( "R/O", "Returns the status of the safe torque off."),
    "swls.en": ( "NV", "Enables and disables software travel limit switches."),
    "swls.limit0": ( "NV", "Sets the position of the software travel limit switch 0."),
    "swls.limit1": ( "NV", "Sets the position of the software travel limit switch 0."),
    "swls.state": ( "R/O", "Reads the actual status of software limit switches."),
    "temp.control": ( "R/O", "Reads the temperature of the control board temperature sensor."),
    "temp.power1": ( "R/O", "Reads the temperature of the power board(s) temperature sensor(s)."),
    "unit.acclinear": ( "NV", "Sets the linear acceleration/deceleration units."),
    "unit.accrotary": ( "NV", "Sets the rotary acceleration/deceleration units."),
    "unit.label": ( "NV", "Sets user-defined name for user-defined position units."),
    "unit.pin": ( "NV", "Sets gear IN for the unit conversion."),
    "unit.plinear": ( "NV", "Sets the linear position units."),
    "unit.pout": ( "NV", "Sets gear out for the unit conversion."),
    "unit.protary": ( "NV", "Sets the position units when the motor type (MOTOR.TYPE ) is rotary."),
    "unit.vlinear": ( "NV", "Sets the linear velocity units."),
    "unit.vrotary": ( "NV", "Sets the velocity units when the motor type (MOTOR.TYPE ) is rotary."),
    "user.int1": ( "R/W", "Stores an integer value for future reference."),
    "vbus.halfvolt": ( "NV", "Changes voltage thresholds for -07 drives."),
    "vbus.ovfthresh": ( "R/O", "Reads the over voltage fault level."),
    "vbus.ovwthresh": ( "N/V", "Sets voltage level for over voltage warning."),
    "vbus.rmslimit": ( "R/O", "Reads the limit for the bus capacitors load."),
    "vbus.uvfthresh": ( "R/O", "Sets the under voltage fault level."),
    "vbus.uvmode": ( "NV", "Indicates undervoltage (UV) mode."),
    "vbus.uvwthresh": ( "NV", "Sets voltage level for undervoltage warning."),
    "vbus.value": ( "R/O", "Reads DC bus voltage."),
    "vl.arpf1": ( "R/W", "Sets the natural frequency of the pole (denominator) of anti-resonance (AR) filters 1, 2, 3, and 4; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.arpq1": ( "R/W", "Sets the Q of the pole (denominator) of anti-resonance (AR) filter 1; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.artype1": ( "NV", "Indicates the method used to calculate BiQuad coefficients; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.arzf1": ( "R/W", "Sets the natural frequency of the zero (numerator) of anti-resonance (AR)filter 1; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.arzq1": ( "R/W", "Sets the Q of the zero (numerator) of anti-resonance filter #1; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.busff": ( "R/O", "Displays the velocity loop feedforward value injected by the field-bus; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.cmd": ( "R/O", "Reads the actual velocity command; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.cmdu": ( "R/W", "Sets the user velocity command; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.err": ( "R/O", "Sets the velocity error; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.fb": ( "R/O", "Reads the velocity feedback; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.fbfilter": ( "R/O", "Filters VL.FB value; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.fbsource": ( "NV", "Sets feedback source for the velocity loop; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.fbunfiltered": ( "R/O", "Reads the velocity feedback."),
    "vl.ff": ( "R/O", "Displays the velocity loop overall feedforward value; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.ffdelay": ( "R/W", "Sets the delay time for the velocity feedforward integrator component."),
    "vl.genmode": ( "NV", "Selects mode of velocity generation (Observer, d/dt); active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.kbusff": ( "R/W", "Sets the velocity loop acceleration feedforward gain value; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.ki": ( "NV", "Sets the velocity loop integral gain for the PI controller; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.kimode": ( "R/W", "Sets whether the velocity Integrator is always on, or if the velocity integrator turns off any time the position loop integrator is active."),
    "vl.kp": ( "NV", "Sets velocity loop proportional gain for the PI controller; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.kvff": ( "R/W", "Sets the velocity loop velocity feedforward gain value; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.limitn": ( "NV", "Sets the velocity lower limit; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.limitp": ( "NV", "Sets the velocity high limit; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.lmjr": ( "R/W", "Sets the ratio of the estimated load moment of inertia relative to the motor moment of inertia; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.model": ( "R/O", "Reads the observer velocity signal; active in opmodes 1 (velocity) and 2 (position) only."),
    "vl.obsbw": ( "NV", "Sets the bandwidth of the observer in Hz."),
    "vl.obsmode": ( "NV", "Sets the observer operating mode."),
    "vl.thresh": ( "NV", "Sets the user over speed fault level."),
    "vl.threshcutoff": ( "NV", "Filter for velocity over speed calculation."),
    "vl.vfthresh": ( "R/O", "VL.VFTHRESH"),
    "ws.arm": ( "Command", "Sets wake and shake to start at the next drive enable."),
    "ws.checkmode": ( "R/W", "Select the type of commutation check to execute after Wake and Shake finds a new commutation angle."),
    "ws.checkt": ( "R/W", "Sets the amount of time a commutation error must be present before an error is thrown."),
    "ws.checkv": ( "R/W", "This parameter sets the velocity threshold which has to be exceeded to activate commutation monitoring."),
    "ws.disarm": ( "Command", "Cancels ARM requests and resets wake and shake to the IDLE state."),
    "ws.distmax": ( "R/W", "Sets maximum movement allowed for wake and shake."),
    "ws.distmin": ( "R/W", "Sets the minimum movement required for wake and shake."),
    "ws.forceoff": ( "R/W", "Disables the automatic Wake and Shake procedure if the identified feedback type is sine encoder without halls (FB1.IDENTIFIED = 21) and the encoder pitch is equal to the motor pole pitch of the linear motor."),
    "ws.freq": ( "R/W", "Sets the sine frequency of excitation for WS.MODE 2."),
    "ws.imax": ( "R/W", "Sets maximum current used for wake and shake."),
    "ws.mode": ( "R/W", "Sets the method used for wake and shake."),
    "ws.numloops": ( "R/W", "Sets the number of repetitions for wake and shake."),
    "ws.state": ( "R/O", "Reads wake and shake status."),
    "ws.t": ( "R/W", "Sets wake and shake current-vector appliance time."),
    "ws.tdelay1": ( "NV", "Delay for wake and shake timing."),
    "ws.tdelay2": ( "NV", "Sets the delay for wake and shake timing."),
    "ws.tdelay3": ( "NV", "Sets the delay for wake and shake between loops in mode 0."),
    "ws.tdelay4": ( "NV", "Sets the delay time after first current-pulse injection."),
    "ws.tiramp": ( "R/W", "Sets the ramp time for the ramp up current in Wake & Shake mode 1."),
    "ws.tstandstill": ( "R/W", "Sets the calming time of the motor for Wake & Shake mode 1."),
    "ws.vthresh": ( "NV", "Defines the maximum allowed velocity for Wake & Shake."),
}
